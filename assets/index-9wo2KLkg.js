var R=r=>{throw TypeError(r)};var I=(r,e,t)=>e.has(r)||R("Cannot "+t);var u=(r,e,t)=>(I(r,e,"read from private field"),t?t.call(r):e.get(r)),w=(r,e,t)=>e.has(r)?R("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(r):e.set(r,t),B=(r,e,t,o)=>(I(r,e,"write to private field"),o?o.call(r,t):e.set(r,t),t),v=(r,e,t)=>(I(r,e,"access private method"),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))o(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&o(n)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}})();class Y{constructor(e,t){this.view=e,this.storyModel=t,this.stories=[],this.currentPage=1,this.pageSize=10,this.location=0,this.isShowingFavorites=!1}async init(){this.view.showLoading(),this.view.hideError(),this.isShowingFavorites=!1,this.view.hideFavoriteControls();try{this.currentPage=1;const e=await this.storyModel.getAllStories(this.currentPage,this.pageSize,this.location);if(e.error)this.view.showError(e.message),this.stories=[],this.view.displayStories({listStory:[]});else{this.stories=e.listStory||[];const t=await Promise.all(this.stories.map(async o=>({...o,isFavorite:await this.storyModel.isStoryFavorite(o.id)})));this.view.displayStories({listStory:t})}}catch(e){console.error("Error in HomePresenter init:",e),this.view.showError("Gagal memuat cerita. Silakan coba lagi atau periksa koneksi Anda."),this.stories=[],this.view.displayStories({listStory:[]})}finally{this.view.hideLoading()}}async refreshStories(){this.isShowingFavorites?await this.loadFavoriteStories():await this.init()}onStoryClick(e){this.view.navigateToStory(e)}async toggleFavorite(e){this.view.showLoading();try{const t=await this.storyModel.isStoryFavorite(e.id);let o;t?(o=await this.storyModel.removeStoryFromFavorites(e.id),o.success?this.view.showNotificationSuccess(o.message):this.view.showNotificationError(o.message)):(o=await this.storyModel.addStoryToFavorites(e),o.success?this.view.showNotificationSuccess(o.message):this.view.showNotificationError(o.message)),this.view.updateStoryCardFavoriteStatus(e.id,!t),this.isShowingFavorites&&await this.loadFavoriteStories()}catch(t){console.error("Error toggling favorite:",t),this.view.showNotificationError("Gagal mengubah status favorit.")}finally{this.view.hideLoading()}}async loadFavoriteStories(){this.view.showLoading(),this.view.hideError(),this.isShowingFavorites=!0,this.view.showFavoriteControls();try{const e=await this.storyModel.getAllFavoriteStories();if(e.error)this.view.showError(e.message),this.stories=[],this.view.displayStories({listStory:[]});else{this.stories=e.listStory||[];const t=this.stories.map(o=>({...o,isFavorite:!0}));this.view.displayStories({listStory:t})}}catch(e){console.error("Error loading favorite stories:",e),this.view.showError("Gagal memuat cerita favorit."),this.stories=[],this.view.displayStories({listStory:[]})}finally{this.view.hideLoading()}}async handleClearAllFavoriteStories(){this.view.showLoading();const e=await this.storyModel.clearAllFavoriteStories();this.view.hideLoading(),e?(this.view.showClearMessage("Semua cerita favorit berhasil dihapus dari penyimpanan offline.",!0),this.stories=[],this.view.displayStories({listStory:[]}),this.view.initializeMap([]),this.view.hideFavoriteControls()):this.view.showClearMessage("Gagal menghapus cerita favorit.",!1),this.isShowingFavorites&&await this.loadFavoriteStories()}async loadMoreStories(){if(this.isShowingFavorites)return console.log("Cannot load more stories when showing favorites."),!1;this.view.showLoading();try{this.currentPage+=1;const e=await this.storyModel.getAllStories(this.currentPage,this.pageSize,this.location);if(!e.error&&e.listStory&&e.listStory.length>0){const t=await Promise.all(e.listStory.map(async o=>({...o,isFavorite:await this.storyModel.isStoryFavorite(o.id)})));return this.stories=[...this.stories,...t],this.view.appendStories({listStory:t}),!0}else return this.currentPage-=1,!1}catch(e){return console.error("Error in HomePresenter loadMoreStories:",e),this.view.showError("Gagal memuat cerita lebih lanjut."),!1}finally{this.view.hideLoading()}}hideError(){this.view.hideError()}}const D=(r,e)=>e.some(t=>r instanceof t);let U,W;function Z(){return U||(U=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function Q(){return W||(W=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const T=new WeakMap,P=new WeakMap,k=new WeakMap;function X(r){const e=new Promise((t,o)=>{const i=()=>{r.removeEventListener("success",s),r.removeEventListener("error",n)},s=()=>{t(p(r.result)),i()},n=()=>{o(r.error),i()};r.addEventListener("success",s),r.addEventListener("error",n)});return k.set(e,r),e}function ee(r){if(T.has(r))return;const e=new Promise((t,o)=>{const i=()=>{r.removeEventListener("complete",s),r.removeEventListener("error",n),r.removeEventListener("abort",n)},s=()=>{t(),i()},n=()=>{o(r.error||new DOMException("AbortError","AbortError")),i()};r.addEventListener("complete",s),r.addEventListener("error",n),r.addEventListener("abort",n)});T.set(r,e)}let M={get(r,e,t){if(r instanceof IDBTransaction){if(e==="done")return T.get(r);if(e==="store")return t.objectStoreNames[1]?void 0:t.objectStore(t.objectStoreNames[0])}return p(r[e])},set(r,e,t){return r[e]=t,!0},has(r,e){return r instanceof IDBTransaction&&(e==="done"||e==="store")?!0:e in r}};function V(r){M=r(M)}function te(r){return Q().includes(r)?function(...e){return r.apply(x(this),e),p(this.request)}:function(...e){return p(r.apply(x(this),e))}}function oe(r){return typeof r=="function"?te(r):(r instanceof IDBTransaction&&ee(r),D(r,Z())?new Proxy(r,M):r)}function p(r){if(r instanceof IDBRequest)return X(r);if(P.has(r))return P.get(r);const e=oe(r);return e!==r&&(P.set(r,e),k.set(e,r)),e}const x=r=>k.get(r);function re(r,e,{blocked:t,upgrade:o,blocking:i,terminated:s}={}){const n=indexedDB.open(r,e),c=p(n);return o&&n.addEventListener("upgradeneeded",a=>{o(p(n.result),a.oldVersion,a.newVersion,p(n.transaction),a)}),t&&n.addEventListener("blocked",a=>t(a.oldVersion,a.newVersion,a)),c.then(a=>{s&&a.addEventListener("close",()=>s()),i&&a.addEventListener("versionchange",l=>i(l.oldVersion,l.newVersion,l))}).catch(()=>{}),c}const ie=["get","getKey","getAll","getAllKeys","count"],se=["put","add","delete","clear"],F=new Map;function H(r,e){if(!(r instanceof IDBDatabase&&!(e in r)&&typeof e=="string"))return;if(F.get(e))return F.get(e);const t=e.replace(/FromIndex$/,""),o=e!==t,i=se.includes(t);if(!(t in(o?IDBIndex:IDBObjectStore).prototype)||!(i||ie.includes(t)))return;const s=async function(n,...c){const a=this.transaction(n,i?"readwrite":"readonly");let l=a.store;return o&&(l=l.index(c.shift())),(await Promise.all([l[t](...c),i&&a.done]))[0]};return F.set(e,s),s}V(r=>({...r,get:(e,t,o)=>H(e,t)||r.get(e,t,o),has:(e,t)=>!!H(e,t)||r.has(e,t)}));const ne=["continue","continuePrimaryKey","advance"],j={},N=new WeakMap,_=new WeakMap,ae={get(r,e){if(!ne.includes(e))return r[e];let t=j[e];return t||(t=j[e]=function(...o){N.set(this,_.get(this)[e](...o))}),t}};async function*ce(...r){let e=this;if(e instanceof IDBCursor||(e=await e.openCursor(...r)),!e)return;e=e;const t=new Proxy(e,ae);for(_.set(t,e),k.set(t,x(e));e;)yield t,e=await(N.get(t)||e.continue()),N.delete(t)}function q(r,e){return e===Symbol.asyncIterator&&D(r,[IDBIndex,IDBObjectStore,IDBCursor])||e==="iterate"&&D(r,[IDBIndex,IDBObjectStore])}V(r=>({...r,get(e,t,o){return q(e,t)?ce:r.get(e,t,o)},has(e,t){return q(e,t)||r.has(e,t)}}));const le="StoryAppDatabase",de=1,f="stories",y="favorite-stories",ue=re(le,de,{upgrade(r){r.objectStoreNames.contains(f)||r.createObjectStore(f,{keyPath:"id"}),r.objectStoreNames.contains(y)||r.createObjectStore(y,{keyPath:"id"})}});class he{async initDb(){return ue}async putAllStories(e){const o=(await this.initDb()).transaction(f,"readwrite"),i=o.objectStore(f);for(const s of e)s&&s.id?i.put(s):console.warn("Skipping story without ID during putAllStories (cache):",s);return o.done}async getAllStories(){return(await this.initDb()).getAll(f)}async getStoryById(e){return(await this.initDb()).get(f,e)}async deleteStory(e){await(await this.initDb()).delete(f,e)}async clearAllStories(){await(await this.initDb()).clear(f)}async putFavoriteStory(e){const o=(await this.initDb()).transaction(y,"readwrite"),i=o.objectStore(y),s={...e,isFavorite:!0};return await i.put(s),o.done}async deleteFavoriteStory(e){await(await this.initDb()).delete(y,e)}async getFavoriteStoryById(e){return(await this.initDb()).get(y,e)}async getAllFavoriteStories(){return(await this.initDb()).getAll(y)}async clearAllFavoriteStories(){await(await this.initDb()).clear(y)}}const d=new he;class O{constructor(){this.baseUrl="https://story-api.dicoding.dev/v1"}async getAllStories(e=1,t=10,o=0){const i=localStorage.getItem("authToken");if(!i){console.log("No auth token found. Attempting to get stories from IndexedDB (cache)...");const s=await d.getAllStories();return s&&s.length>0?(console.log("Displaying stories from IndexedDB (offline, no token)."),{error:!1,message:"Stories loaded from offline cache.",listStory:await Promise.all(s.map(async c=>({...c,isFavorite:await this.isStoryFavorite(c.id)})))}):(console.log("No offline stories available and no token."),{error:!0,message:"Please login to fetch stories or no offline data available.",listStory:[]})}try{const s=await fetch(`${this.baseUrl}/stories?page=${e}&size=${t}&location=${o}`,{method:"GET",headers:{Authorization:`Bearer ${i}`}});if(!s.ok){if(s.status===401)return console.warn("Authentication token expired or invalid. Clearing token..."),localStorage.removeItem("authToken"),{error:!0,message:"Session expired. Please re-login to fetch new stories.",listStory:[]};console.error(`HTTP error! status: ${s.status}. Attempting to get stories from IndexedDB (cache)...`);const c=await d.getAllStories();return c&&c.length>0?(console.log("Displaying stories from IndexedDB (offline fallback)."),{error:!1,message:"Stories loaded from offline cache.",listStory:await Promise.all(c.map(async l=>({...l,isFavorite:await this.isStoryFavorite(l.id)})))}):(console.log("No offline stories available."),{error:!0,message:`Failed to fetch stories: ${s.statusText||"Network error"}. No offline data available.`,listStory:[]})}const n=await s.json();if(n.listStory){await d.putAllStories(n.listStory);const c=await Promise.all(n.listStory.map(async a=>({...a,isFavorite:await this.isStoryFavorite(a.id)})));return{...n,listStory:c}}return n}catch(s){console.error("Error fetching stories from API:",s),console.log("Attempting to get stories from IndexedDB (cache) due to network error...");const n=await d.getAllStories();return n&&n.length>0?(console.log("Displaying stories from IndexedDB (offline)."),{error:!1,message:"Stories loaded from offline cache.",listStory:await Promise.all(n.map(async a=>({...a,isFavorite:await this.isStoryFavorite(a.id)})))}):(console.log("No offline stories available and network error persists."),{error:!0,message:"Failed to fetch stories and no offline data available.",listStory:[]})}}async addStory({description:e,photo:t,lat:o,lon:i}){const s=localStorage.getItem("authToken");if(!s)return{error:!0,message:"Authentication token is missing. Please log in."};const n=new FormData;n.append("description",e),n.append("photo",t),o!=null&&n.append("lat",o),i!=null&&n.append("lon",i);try{const c=await fetch(`${this.baseUrl}/stories`,{method:"POST",headers:{Authorization:`Bearer ${s}`},body:n}),a=await c.json();if(c.ok&&!a.error)console.log("Story added successfully to API.");else throw new Error(a.message||`Failed to add story with status: ${c.status}`);return a}catch(c){return console.error("Error adding story:",c),{error:!0,message:c.message||"Failed to add story."}}}async getStoryById(e){const t=localStorage.getItem("authToken");if(!t){console.log(`No auth token found. Attempting to get story ${e} from IndexedDB (cache or favorites)...`);let o=await d.getStoryById(e);return o||(o=await d.getFavoriteStoryById(e)),o?(console.log("Displaying story from IndexedDB (offline, no token)."),{error:!1,message:"Story loaded from offline cache.",story:o}):(console.log("No offline story available and no token."),{error:!0,message:"Please login to fetch story or no offline data available.",story:null})}try{const o=await fetch(`${this.baseUrl}/stories/${e}`,{method:"GET",headers:{Authorization:`Bearer ${t}`}}),i=await o.json();if(!o.ok||i.error){if(o.status===401)return console.warn("Authentication token expired or invalid. Clearing token..."),localStorage.removeItem("authToken"),{error:!0,message:"Session expired. Please re-login.",story:null};console.error(`HTTP error! status: ${o.status}. Attempting to get story ${e} from IndexedDB (cache or favorites)...`);let s=await d.getStoryById(e);if(s||(s=await d.getFavoriteStoryById(e)),s)return console.log("Displaying story from IndexedDB (offline fallback)."),{error:!1,message:"Story loaded from offline cache.",story:s};throw console.log("No offline story available."),new Error(i.message||`Failed to fetch story ${e}: ${o.statusText||"Network error"}. No offline data available.`)}if(i.story){await d.putStory(i.story),console.log(`Story ${e} successfully fetched from API and saved to IndexedDB (cache).`);const s={...i.story,isFavorite:await this.isStoryFavorite(i.story.id)};return{...i,story:s}}return i}catch(o){console.error(`Error fetching story ${e} from API:`,o),console.log(`Attempting to get story ${e} from IndexedDB (cache or favorites) due to network error...`);let i=await d.getStoryById(e);return i||(i=await d.getFavoriteStoryById(e)),i?(console.log("Displaying story from IndexedDB (offline)."),{error:!1,message:"Story loaded from offline cache.",story:i}):(console.log("No offline story available and network error persists."),{error:!0,message:o.message||`Failed to fetch story ${e} and no offline data available.`,story:null})}}async deleteStoryFromLocal(e){try{return await d.deleteStory(e),console.log(`Story ${e} deleted from IndexedDB cache.`),!0}catch(t){return console.error(`Error deleting story ${e} from IndexedDB cache:`,t),!1}}async clearAllStoriesFromLocal(){try{return await d.clearAllStories(),console.log("All stories cleared from IndexedDB cache."),!0}catch(e){return console.error("Error clearing all stories from IndexedDB cache:",e),!1}}async addStoryToFavorites(e){try{return await d.putFavoriteStory(e),console.log(`Story ${e.id} added to favorites.`),{success:!0,message:"Cerita berhasil ditambahkan ke favorit."}}catch(t){return console.error("Error adding story to favorites:",t),{success:!1,message:"Gagal menambahkan cerita ke favorit."}}}async removeStoryFromFavorites(e){try{return await d.deleteFavoriteStory(e),console.log(`Story ${e} removed from favorites.`),{success:!0,message:"Cerita berhasil dihapus dari favorit."}}catch(t){return console.error("Error removing story from favorites:",t),{success:!1,message:"Gagal menghapus cerita dari favorit."}}}async isStoryFavorite(e){return!!await d.getFavoriteStoryById(e)}async getAllFavoriteStories(){try{const e=await d.getAllFavoriteStories();return console.log("Fetched all favorite stories from IndexedDB."),{error:!1,message:"Favorite stories loaded from offline storage.",listStory:e}}catch(e){return console.error("Error getting all favorite stories:",e),{error:!0,message:"Gagal memuat cerita favorit dari penyimpanan offline.",listStory:[]}}}async clearAllFavoriteStories(){try{return await d.clearAllFavoriteStories(),console.log("All favorite stories cleared from IndexedDB."),!0}catch(e){return console.error("Error clearing all favorite stories from IndexedDB:",e),!1}}}const ge="BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk";function me(r){const e="=".repeat((4-r.length%4)%4),t=(r+e).replace(/-/g,"+").replace(/_/g,"/"),o=window.atob(t),i=new Uint8Array(o.length);for(let s=0;s<o.length;++s)i[s]=o.charCodeAt(s);return i}const h={async registerServiceWorker(){if(!("serviceWorker"in navigator)){console.log("Service Worker not supported in this browser.");return}try{return await navigator.serviceWorker.register("/service-worker.js")}catch(r){console.error("Service Worker registration failed:",r)}},async requestPermission(){const r=await Notification.requestPermission();return console.log(r==="denied"?"Notification permission denied.":r==="default"?"Notification permission dismissed.":"Notification permission granted."),r},async subscribeUserToPush(r){if(!("PushManager"in window))return console.log("Push Messaging not supported."),null;try{const t={userVisibleOnly:!0,applicationServerKey:me(ge)},o=await r.pushManager.subscribe(t);return console.log("User is subscribed:",o),o}catch(e){return console.error("Failed to subscribe the user: ",e),null}},async unsubscribeUserFromPush(r){try{const e=await r.pushManager.getSubscription();return e?(await e.unsubscribe(),console.log("User is unsubscribed."),!0):!1}catch(e){return console.error("Failed to unsubscribe the user: ",e),!1}},async getSubscription(){return!("serviceWorker"in navigator)||!("PushManager"in window)?null:(await navigator.serviceWorker.ready).pushManager.getSubscription()},isPushNotificationSupported(){return"serviceWorker"in navigator&&"PushManager"in window}};class fe{constructor(){this.baseUrl="https://story-api.dicoding.dev/v1"}async subscribe(e,t){try{const o=await fetch(`${this.baseUrl}/notifications/subscribe`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({endpoint:t.endpoint,keys:{p256dh:t.toJSON().keys.p256dh,auth:t.toJSON().keys.auth}})});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);return await o.json()}catch(o){throw console.error("Error subscribing to push notification:",o),o}}async unsubscribe(e,t){try{const o=await fetch(`${this.baseUrl}/notifications/subscribe`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({endpoint:t})});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);return await o.json()}catch(o){throw console.error("Error unsubscribing from push notification:",o),o}}}class ye{constructor(e){this.view=e,this.NotificationModel=new fe,this.serviceWorkerRegistration=null}async init(){if(!h.isPushNotificationSupported()){this.view.showNotificationUnsupported();return}if(this.serviceWorkerRegistration=await h.registerServiceWorker(),!this.serviceWorkerRegistration){this.view.showNotificationUnsupported();return}await this.checkSubscriptionStatus()}async checkSubscriptionStatus(){await h.getSubscription()?this.view.showUnsubscribeButton():this.view.showSubscribeButton()}async handleSubscribe(){if(await h.requestPermission()!=="granted"){this.view.showNotificationPermissionDenied();return}const t=await h.subscribeUserToPush(this.serviceWorkerRegistration);if(t){const o=localStorage.getItem("authToken");if(o)try{await this.NotificationModel.subscribe(o,t),this.view.showNotificationSuccess("Berhasil berlangganan notifikasi!"),this.view.showUnsubscribeButton()}catch(i){console.error("Error sending subscription to backend:",i),this.view.showNotificationError("Gagal berlangganan notifikasi. Silakan coba lagi."),await h.unsubscribeUserFromPush(this.serviceWorkerRegistration),this.view.showSubscribeButton()}else this.view.showNotificationError("Autentikasi diperlukan untuk berlangganan notifikasi."),await h.unsubscribeUserFromPush(this.serviceWorkerRegistration),this.view.showSubscribeButton()}else this.view.showNotificationError("Gagal berlangganan notifikasi.")}async handleUnsubscribe(){const e=await h.getSubscription();if(!e){this.view.showNotificationError("Anda tidak berlangganan notifikasi."),this.view.showSubscribeButton();return}const t=localStorage.getItem("authToken");if(t)try{await this.NotificationModel.unsubscribe(t,e.endpoint),await h.unsubscribeUserFromPush(this.serviceWorkerRegistration),this.view.showNotificationSuccess("Berhasil berhenti berlangganan notifikasi."),this.view.showSubscribeButton()}catch(o){console.error("Error sending unsubscription to backend:",o),this.view.showNotificationError("Gagal berhenti berlangganan notifikasi. Silakan coba lagi.")}else this.view.showNotificationError("Autentikasi diperlukan untuk berhenti berlangganan notifikasi.")}}class pe{constructor(){this.homePresenter=null,this.notificationPresenter=null,this.map=null,this.storyModel=new O}async render(){return`
      <section class="home-main" id="main-section" tabindex="-1">
        <section class="hero">
          <h1>Story Explorer</h1>
          <p>Discover amazing stories from around the world</p>
        </section>

        <section class="notification-section">
          <h2>Push Notifications</h2>
          <p id="notification-status">Memuat status notifikasi...</p>
          <button id="subscribe-button" class="action-button hidden">Berlangganan Notifikasi</button>
          <button id="unsubscribe-button" class="action-button hidden">Berhenti Berlangganan Notifikasi</button>
          <div id="notification-message" class="info-message hidden" role="alert" aria-live="assertive"></div>
        </section>

        <section class="stories-section">
          <h2>Latest Stories</h2>
          <div class="story-controls" style="margin-bottom: 20px;">
            <button id="show-all-stories-button" class="action-button primary">Tampilkan Semua Cerita</button>
            <button id="show-favorite-stories-button" class="action-button secondary">Tampilkan Favorit</button>
          </div>

          <div id="loading" class="loading hidden" aria-live="polite">
            <div class="spinner"></div>
            <p>Memuat cerita...</p>
          </div>

          <div id="error-message" class="error-message hidden" role="alert" aria-live="assertive"></div>

          <div id="stories-container" class="stories-grid"></div>

          <div id="favorite-controls-container" class="offline-control-section hidden" style="margin-top: 30px; text-align: center;">
            <h3>Kontrol Cerita Favorit</h3>
            <button id="clearAllFavoriteStoriesButton" class="action-button red">Hapus Semua Favorit</button>
            <p class="info-message" id="clearMessage" style="display: none; margin-top: 10px;"></p>
          </div>
        </section>

        <section class="map-section">
          <h2>Story Locations</h2>
          <div id="map" class="map-container" role="img" aria-label="Interactive map showing story locations"></div>
        </section>
      </section>
    `}async afterRender(){this.homePresenter=new Y(this,this.storyModel),await this.homePresenter.init(),this.notificationPresenter=new ye(this),await this.notificationPresenter.init();const e=document.getElementById("subscribe-button"),t=document.getElementById("unsubscribe-button");e&&e.addEventListener("click",async()=>{await this.notificationPresenter.handleSubscribe()}),t&&t.addEventListener("click",async()=>{await this.notificationPresenter.handleUnsubscribe()});const o=document.getElementById("clearAllFavoriteStoriesButton");o&&o.addEventListener("click",async()=>{confirm("Apakah Anda yakin ingin menghapus SEMUA cerita favorit yang tersimpan secara offline?")&&await this.homePresenter.handleClearAllFavoriteStories()}),document.getElementById("show-all-stories-button").addEventListener("click",()=>{this.homePresenter.init()}),document.getElementById("show-favorite-stories-button").addEventListener("click",()=>{this.homePresenter.loadFavoriteStories()})}showLoading(){var e;(e=document.getElementById("loading"))==null||e.classList.remove("hidden")}hideLoading(){var e;(e=document.getElementById("loading"))==null||e.classList.add("hidden")}showError(e){const t=document.getElementById("error-message");t&&(t.textContent=e,t.classList.remove("hidden"))}hideError(){const e=document.getElementById("error-message");e&&(e.classList.add("hidden"),e.textContent="")}showClearMessage(e,t){const o=document.getElementById("clearMessage");o&&(o.textContent=e,o.style.display="block",o.classList.remove("error-message","success-message"),o.classList.add(t?"success-message":"error-message"),setTimeout(()=>{o.style.display="none"},5e3))}displayStories(e){const t=document.getElementById("stories-container");if(!t)return;if(e.error){this.showError(e.message),t.innerHTML="",this.initializeMap([]);return}const o=e.listStory||[];if(o.length===0){t.innerHTML='<p class="info-message">Tidak ada cerita untuk ditampilkan. Favoritkan beberapa cerita atau periksa koneksi Anda jika sedang offline untuk melihat cerita terbaru.</p>',this.initializeMap([]);return}t.innerHTML=this.generateStoriesHTML(o),this.attachStoryCardEvents(t),this.initializeMap(o)}appendStories(e){const t=document.getElementById("stories-container");if(!t)return;const o=e.listStory||e;if(o&&o.length>0){const i=this.generateStoriesHTML(o);t.insertAdjacentHTML("beforeend",i);const s=t.querySelectorAll(".story-card:not([data-events-attached])");this.attachStoryCardEvents(t,s)}}generateStoriesHTML(e){return e.map(t=>`
        <article class="story-card" data-story-id="${t.id}">
          <img src="${t.photoUrl}" alt="Story photo: ${t.description}" class="story-image" loading="lazy">
          <div class="story-content">
            <h3 class="story-title">${t.name}</h3>
            <p class="story-description">${t.description}</p>
            <time class="story-date" datetime="${t.createdAt}">
              ${new Date(t.createdAt).toLocaleDateString()}
            </time>
            ${t.lat&&t.lon?`<p class="story-location">📍 <br>Lat: ${t.lat}<br>Lon: ${t.lon}</p>`:""}
            <div class="story-actions">
              <button class="detail-button" data-story-id="${t.id}" aria-label="View details for story by ${t.name}">🔎 Detail</button>
              <button class="favorite-button ${t.isFavorite?"favorited":""}" data-story-id="${t.id}" data-story='${JSON.stringify(t)}' aria-label="${t.isFavorite?"Remove from favorites":"Add to favorites"}">
                ${t.isFavorite?"❤️ Favorited":"🤍 Favorite"}
              </button>
            </div>
          </div>
        </article>
      `).join("")}attachStoryCardEvents(e,t=null){(t||e.querySelectorAll(".story-card")).forEach(i=>{if(i.dataset.eventsAttached)return;const s=i.dataset.storyId,n=()=>{this.homePresenter.onStoryClick(s)};i.addEventListener("click",n),i.addEventListener("keydown",l=>{(l.key==="Enter"||l.key===" ")&&(l.preventDefault(),n())});const c=i.querySelector(".detail-button");c&&c.addEventListener("click",l=>{l.stopPropagation(),this.homePresenter.onStoryClick(s)});const a=i.querySelector(".favorite-button");a&&a.addEventListener("click",async l=>{l.stopPropagation();const K=JSON.parse(l.target.dataset.story);await this.homePresenter.toggleFavorite(K)}),i.dataset.eventsAttached="true"})}updateStoryCardFavoriteStatus(e,t){const o=document.querySelector(`.story-card[data-story-id="${e}"] .favorite-button`);if(o){t?(o.classList.add("favorited"),o.textContent="❤️ Favorited",o.setAttribute("aria-label","Remove from favorites")):(o.classList.remove("favorited"),o.textContent="🤍 Favorite",o.setAttribute("aria-label","Add to favorites"));const i=JSON.parse(o.dataset.story);i.isFavorite=t,o.dataset.story=JSON.stringify(i)}}navigateToStory(e){window.location.hash=`/detail/${e}`}initializeMap(e){if(this.map&&(this.map.remove(),this.map=null),!document.getElementById("map")){console.warn("Map element not found. Skipping map initialization.");return}this.map=L.map("map").setView([-6.2088,106.8456],5),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"© OpenStreetMap contributors"}).addTo(this.map);let o=[],i=!1;e.forEach(s=>{s.lat&&s.lon&&(i=!0,L.marker([s.lat,s.lon]).addTo(this.map).bindPopup(`
          <div class="map-popup">
            <h4>${s.name}</h4>
            <p>${s.description}</p>
            <img src="${s.photoUrl}" alt="Story photo" style="width: 150px; height: 100px; object-fit: cover; border-radius: 4px;">
          </div>
        `),o.push([s.lat,s.lon]))}),i&&o.length>0&&this.map.fitBounds(o,{padding:[50,50]})}showNotificationUnsupported(){var t,o;const e=document.getElementById("notification-status");e&&(e.textContent="Notifikasi push tidak didukung oleh browser Anda."),(t=document.getElementById("subscribe-button"))==null||t.classList.add("hidden"),(o=document.getElementById("unsubscribe-button"))==null||o.classList.add("hidden")}showNotificationPermissionDenied(){var e,t;this.showNotificationError("Izin untuk notifikasi ditolak."),(e=document.getElementById("subscribe-button"))==null||e.classList.add("hidden"),(t=document.getElementById("unsubscribe-button"))==null||t.classList.add("hidden")}showNotificationSuccess(e){const t=document.getElementById("notification-message");t&&(t.textContent=e,t.classList.remove("hidden"),t.classList.remove("error-message"),t.classList.add("success-message"),setTimeout(()=>{t.classList.add("hidden")},5e3))}showNotificationError(e){const t=document.getElementById("notification-message");t&&(t.textContent=e,t.classList.remove("hidden"),t.classList.remove("success-message"),t.classList.add("error-message"),setTimeout(()=>{t.classList.add("hidden")},5e3))}showSubscribeButton(){var e,t,o;(e=document.getElementById("subscribe-button"))==null||e.classList.remove("hidden"),(t=document.getElementById("unsubscribe-button"))==null||t.classList.add("hidden"),(o=document.getElementById("notification-message"))==null||o.classList.add("hidden"),document.getElementById("notification-status").textContent="Anda belum berlangganan notifikasi."}showUnsubscribeButton(){var e,t,o;(e=document.getElementById("subscribe-button"))==null||e.classList.add("hidden"),(t=document.getElementById("unsubscribe-button"))==null||t.classList.remove("hidden"),(o=document.getElementById("notification-message"))==null||o.classList.add("hidden"),document.getElementById("notification-status").textContent="Anda berlangganan notifikasi."}showFavoriteControls(){const e=document.getElementById("favorite-controls-container");e&&e.classList.remove("hidden")}hideFavoriteControls(){const e=document.getElementById("favorite-controls-container");e&&e.classList.add("hidden");const t=document.getElementById("clearMessage");t&&(t.style.display="none")}}class we{constructor(e,t){this.view=e,this.model=t}async handleLogin(e,t){try{const o=await this.model.login(e,t);o.error?this.view.showError(o.message):(localStorage.setItem("authToken",o.loginResult.token),this.view.redirectToHome())}catch{this.view.showError("Failed to login. Please try again.")}}}class G{constructor(){this.baseUrl="https://story-api.dicoding.dev/v1"}async register(e,t,o){const i={name:e,email:t,password:o};try{const s=await fetch(`${this.baseUrl}/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)});if(!s.ok)throw new Error(`HTTP error! status: ${s.status}`);return await s.json()}catch(s){throw console.error("Error register:",s),s}}async login(e,t){const o={email:e,password:t};try{const i=await fetch(`${this.baseUrl}/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!i.ok)throw new Error(`HTTP error! status: ${i.status}`);return await i.json()}catch(i){throw console.error("Error login:",i),i}}}class ve{constructor(){this.presenter=null}async render(){return`
      <section class="login-main">
        <section class="login-section">
          <h1>Login to Story Explorer</h1>
          <form id="login-form" class="login-form">
            <label for="email">Email</label>
            <input type="email" id="email" name="email" required />

            <label for="password">Password</label>
            <input type="password" id="password" name="password" required minlength="8" />

            <button type="submit" class="login-button">Login</button>
          </form>

          <button id="go-register" class="register-handle" type="button">
            Belum punya akun? Register di sini
          </button>

          <div id="login-error" class="error-message hidden" role="alert" aria-live="assertive"></div>
        </section>
      </section>
    `}async afterRender(){const e=new G;this.presenter=new we(this,e);const t=document.getElementById("login-form");t.addEventListener("submit",async i=>{i.preventDefault();const s=t.email.value.trim(),n=t.password.value;await this.presenter.handleLogin(s,n)}),document.getElementById("go-register").addEventListener("click",()=>{window.location.hash="/register"})}showError(e){const t=document.getElementById("login-error");t&&(t.textContent=e,t.classList.remove("hidden"))}redirectToHome(){window.location.hash="/"}}class be{constructor(e,t){this.view=e,this.model=t}async submitStory({description:e,photo:t,lat:o,lon:i}){if(this.view.showStatus("Submitting story..."),!t||!t.type.startsWith("image/")||t.size>1048576){this.view.showStatus("Invalid photo. Only image files under 1MB allowed.",!0);return}const s=await this.model.addStory({description:e,photo:t,lat:o,lon:i});s.error?this.view.showStatus(`Error: ${s.message}`,!0):(this.view.showStatus("Story added successfully!"),this.view.resetForm(),setTimeout(()=>this.view.navigateToHome(),1500))}}class Se{constructor(){this.presenter=null,this.capturedBlob=null}async render(){return`
    <section id="main-section" class="add-main" tabindex="-1" role="main">
      <h2>Add New Story</h2>
      <form id="storyForm" novalidate>
          <label for="description">Description <span aria-hidden="true">*</span></label>
          <textarea id="description" name="description" required aria-required="true"></textarea>

          <label for="video">Camera Preview</label>
          <video id="video" autoplay playsinline aria-label="Live camera preview"></video>
          <button id="captureBtn" type="button">Capture Photo</button>

          <img id="preview" alt="Captured photo preview" style="display:none;" />

          <label for="lat">Latitude (click map)</label>
          <input type="number" step="any" id="lat" name="lat" readonly aria-readonly="true" />

          <label for="lon">Longitude (click map)</label>
          <input type="number" step="any" id="lon" name="lon" readonly aria-readonly="true" />

          <div id="map" role="application" aria-label="Map to select location"></div>

          <button id="submitBtn" type="button">Submit Story</button>
      </form>

      <div id="statusMessage" role="alert" aria-live="polite"></div>
    </section>
  `}async afterRender(){const e=new O;this.presenter=new be(this,e);const t=document.getElementById("video");try{this.stream=await navigator.mediaDevices.getUserMedia({video:{facingMode:"environment"}}),t.srcObject=this.stream,await t.play()}catch(n){this.showStatus("Error accessing camera: "+n.message,!0)}const o=document.getElementById("captureBtn"),i=document.getElementById("preview");o.addEventListener("click",()=>{const n=document.createElement("canvas");n.width=t.videoWidth,n.height=t.videoHeight,n.getContext("2d").drawImage(t,0,0,n.width,n.height),n.toBlob(a=>{this.capturedBlob=a,i.src=URL.createObjectURL(a),i.style.display="block"},"image/jpeg",.95)}),this.initMap(),document.getElementById("submitBtn").addEventListener("click",()=>{const n=document.getElementById("description").value,c=document.getElementById("lat").value||null,a=document.getElementById("lon").value||null,l=this.capturedBlob;if(!n){this.showStatus("Description is required",!0);return}if(!l){this.showStatus("Please capture a photo first",!0);return}this.presenter.submitStory({description:n,photo:l,lat:c,lon:a})})}showStatus(e,t=!1){const o=document.getElementById("statusMessage");o.textContent=e,o.style.color=t?"red":"green"}resetForm(){document.getElementById("description").value="",this.capturedBlob=null;const e=document.getElementById("preview");e.src="",e.style.display="none",document.getElementById("lat").value="",document.getElementById("lon").value=""}navigateToHome(){window.location.hash="/"}initMap(){const e=L.map("map").setView([-6.2088,106.8456],13);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"© OpenStreetMap contributors"}).addTo(e);let t;e.on("click",o=>{const{lat:i,lng:s}=o.latlng;document.getElementById("lat").value=i.toFixed(6),document.getElementById("lon").value=s.toFixed(6),t?t.setLatLng(o.latlng):t=L.marker(o.latlng).addTo(e)})}cleanup(){this.stream&&(this.stream.getTracks().forEach(e=>e.stop()),this.stream=null)}}class Ee{constructor(e,t){this.view=e,this.model=t}async loadStory(e){try{const t=await this.model.getStoryById(e);this.view.showStory(t.story)}catch(t){this.view.showError(t.message||"Failed to load story")}}}class Be{constructor(){this.presenter=null}async render(){return`
    <section id="main-section" class="detail-main" tabindex="-1" role="main">
      <h2>Story Detail</h2>
      <section id="storyDetail" aria-live="polite">Loading...</section>
      <button id="backBtn" class="btn-back">Back to Home</button>
    </section>
  `}async afterRender(){const e=new O;this.presenter=new Ee(this,e);const t=window.location.hash.split("/"),o=t[t.length-1];this.presenter.loadStory(o),document.getElementById("backBtn").addEventListener("click",()=>{window.location.hash="/"})}showStory(e){const t=document.getElementById("storyDetail");t.innerHTML=`
      <section role="region" aria-labelledby="story-title">
        <img src="${e.photoUrl}" alt="Story photo by ${e.name}" class="story-image" />
        <p><strong id="story-title">Name</strong> ${e.name}</p>
        <p><strong>Description</strong> ${e.description}</p>
        <p><strong>Created At</strong> ${new Date(e.createdAt).toLocaleString()}</p>
        ${e.lat&&e.lon?`
              <p><strong>Location</strong> ${e.lat}, ${e.lon}</p>
              <div id="map" style="height: 300px; margin-top: 15px;" aria-label="Story location map"></div>
            `:""}
      </section>
    `,e.lat&&e.lon&&setTimeout(()=>{const o=L.map("map").setView([e.lat,e.lon],13);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(o),L.marker([e.lat,e.lon]).addTo(o).bindPopup(`<b>${e.name}</b><br>${e.description}`).openPopup()},100)}showError(e){const t=document.getElementById("storyDetail");t.innerHTML=`<p style="color:red;">${e}</p>`}}class ke{constructor(e,t){this.view=e,this.model=t}async handleRegister({name:e,email:t,password:o}){try{const i=await this.model.register(e,t,o);i.error?this.view.showError(i.message):this.view.redirectToLogin()}catch{this.view.showError("Failed to register. Please try again.")}}}class Ie{constructor(){this.presenter=null}async render(){return`
      <section class="register-main">
        <section class="register-section">
          <h1>Register for Story Explorer</h1>
          <form id="register-form" class="register-form">
            <label for="name">Name</label>
            <input type="text" id="name" name="name" required />

            <label for="email">Email</label>
            <input type="email" id="email" name="email" required />

            <label for="password">Password</label>
            <input type="password" id="password" name="password" required minlength="8" />

            <button type="submit" class="register-button">Register</button>
          </form>

          <button id="go-login" class="register-handle" type="button">
            Sudah punya akun? Login di sini
          </button>

          <div id="register-error" class="error-message hidden" role="alert" aria-live="assertive"></div>
        </section>
      </section>
    `}async afterRender(){const e=new G;this.presenter=new ke(this,e);const t=document.getElementById("register-form");t.addEventListener("submit",async i=>{i.preventDefault();const s=t.name.value.trim(),n=t.email.value.trim(),c=t.password.value;await this.presenter.handleRegister({name:s,email:n,password:c})}),document.getElementById("go-login").addEventListener("click",()=>{window.location.hash="/login"})}showError(e){const t=document.getElementById("register-error");t&&(t.textContent=e,t.classList.remove("hidden"))}redirectToLogin(){window.location.hash="/login"}}const A={"/":{page:new pe,authRequired:!0},"/login":{page:new ve,guestOnly:!0},"/register":{page:new Ie,guestOnly:!0},"/add-story":{page:new Se,authRequired:!0},"/detail/:id":{page:new Be,authRequired:!0},"/logout":{handle:async()=>{localStorage.removeItem("authToken"),window.location.hash="/login"}}};function Le(r){const e=r.split("/");return{resource:e[1]||null,id:e[2]||null}}function Pe(r){let e="";return r.resource&&(e=e.concat(`/${r.resource}`)),r.id&&(e=e.concat("/:id")),e||"/"}function Fe(){return location.hash.replace("#","")||"/"}function Ae(){const r=Fe(),e=Le(r);return Pe(e)}var b,S,m,E,g,J,C,$;class De{constructor({navigationDrawer:e,drawerButton:t,content:o}){w(this,g);w(this,b,null);w(this,S,null);w(this,m,null);w(this,E,null);B(this,b,o),B(this,S,t),B(this,m,e),v(this,g,J).call(this)}async renderPage(){var i;const e=Ae();let t=A[e];if(!t){const s=Object.keys(A).find(n=>new RegExp(`^${n.replace(/:[a-zA-Z0-9_]+/g,"([a-zA-Z0-9_]+)")}$`).test(e));if(s){t=A[s];const n=t.page.constructor;t={...t,page:new n}}}if(!t){u(this,b).innerHTML="<h1>404 - Page Not Found</h1>";return}if(t.authRequired&&!z()){window.location.hash="/login";return}if(t.guestOnly&&z()){window.location.hash="/";return}if(typeof t.handle=="function"){await t.handle();return}const o=t.page;((i=u(this,E))==null?void 0:i.cleanup)instanceof Function&&u(this,E).cleanup(),B(this,E,o),"startViewTransition"in document?document.startViewTransition(async()=>{await v(this,g,C).call(this,o),v(this,g,$).call(this,window.location.hash)}):(await v(this,g,C).call(this,o),v(this,g,$).call(this,window.location.hash))}}b=new WeakMap,S=new WeakMap,m=new WeakMap,E=new WeakMap,g=new WeakSet,J=function(){u(this,S).addEventListener("click",()=>{u(this,m).classList.toggle("open")}),document.body.addEventListener("click",e=>{!u(this,m).contains(e.target)&&!u(this,S).contains(e.target)&&u(this,m).classList.remove("open"),u(this,m).querySelectorAll("a").forEach(t=>{t.contains(e.target)&&u(this,m).classList.remove("open")})})},C=async function(e){u(this,b).innerHTML=await e.render(),await e.afterRender()},$=function(e){const t=["#/login","#/register"],o=document.querySelector("header"),i=document.querySelector("footer");t.includes(e)?(o.style.display="none",i.style.display="none"):(o.style.display="",i.style.display="")};function z(){return!!localStorage.getItem("authToken")}document.addEventListener("DOMContentLoaded",async()=>{h.isPushNotificationSupported()&&await h.registerServiceWorker();const r=new De({content:document.querySelector("#main-content"),drawerButton:document.querySelector("#drawer-button"),navigationDrawer:document.querySelector("#navigation-drawer")});await r.renderPage(),window.addEventListener("hashchange",async()=>{await r.renderPage()});const e=document.getElementById("skip-to-content");e&&e.addEventListener("click",t=>{t.preventDefault();const o=document.getElementById("main-section");o&&(o.setAttribute("tabindex","-1"),o.focus(),o.scrollIntoView({behavior:"smooth"}))})});
